{"remainingRequest":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/babel-loader/lib/index.js!/home/danijel/Documents/Workspace/mc2/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/danijel/Documents/Workspace/mc2/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/danijel/Documents/Workspace/mc2/frontend/src/components/auth/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/danijel/Documents/Workspace/mc2/frontend/src/components/auth/Register.vue","mtime":1559852030739},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1557082350867},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/babel-loader/lib/index.js","mtime":1557082335768},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1557082350867},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/vue-loader/lib/index.js","mtime":1557082351628}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport modal from \"@/components/auth/modal.vue\";\nexport default {\n  name: 'Register',\n  components: {\n    modal: modal\n  },\n  data: function data() {\n    return {\n      isModalVisible: false,\n      register: {\n        email: null,\n        password: null,\n        confirmPassword: null,\n        firstName: null,\n        lastName: null,\n        errors: [],\n        status: null\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.$store.commit('getEmails');\n  },\n  methods: {\n    validateEmail: function validateEmail(email) {\n      return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n    },\n    registerValidate: function registerValidate() {\n      this.register.errors = [];\n\n      if (!this.register.email) {\n        this.register.errors.push(\"Email required.\");\n      } else if (!this.validateEmail(this.register.email)) {\n        this.register.errors.push(\"Email must be in format example@domain.com\"); // }  else if(this.$store.state.userEmails.includes(this.register.email)) {\n        //   this.register.errors.push(\"Email is not allowed. Please choose another one.\")\n      }\n\n      if (!this.register.password) this.register.errors.push(\"Password required.\");\n\n      if (!this.register.confirmPassword) {\n        this.register.errors.push(\"Confirm Password required.\");\n      } else if (this.register.password != this.register.confirmPassword) {\n        this.register.errors.push(\"Passwords must match\");\n      }\n\n      if (!this.register.firstName) this.register.errors.push(\"First name required.\");\n      if (!this.register.lastName) this.register.errors.push(\"Last name required.\");\n\n      if (!(this.register.errors && this.register.errors.length)) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    registerHandler: function registerHandler() {\n      var _this = this;\n\n      var valid = this.registerValidate();\n      var registerUserData = {\n        email: this.register.email,\n        password: this.register.password,\n        firstName: this.register.firstName,\n        lastName: this.register.lastName,\n        profilePic: \"default\" + (Math.floor(Math.random() * 2) + 1) + \".png\"\n      };\n\n      if (valid) {\n        axios.post(\"/api/register\", registerUserData).then(function (res) {\n          if (res.data.auth == true) {\n            _this.$store.dispatch('authUser');\n\n            _this.isModalVisible = true;\n          } else {\n            _this.register.status = res.data.error;\n          }\n        });\n      }\n    },\n    successfullyRegistered: function successfullyRegistered() {\n      this.register.dialog = false;\n      this.$router.push({\n        name: \"Start\"\n      });\n    }\n  }\n};",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,KAAA,MAAA,6BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA;AACA,QAAA,KAAA,EAAA,IADA;AAEA,QAAA,QAAA,EAAA,IAFA;AAGA,QAAA,eAAA,EAAA,IAHA;AAIA,QAAA,SAAA,EAAA,IAJA;AAKA,QAAA,QAAA,EAAA,IALA;AAMA,QAAA,MAAA,EAAA,EANA;AAOA,QAAA,MAAA,EAAA;AAPA;AAFA,KAAA;AAYA,GAlBA;AAmBA,EAAA,OAnBA,qBAmBA;AACA,SAAA,MAAA,CAAA,MAAA,CAAA,WAAA;AACA,GArBA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,yBACA,KADA,EACA;AACA,aAAA,6BAAA,IAAA,CAAA,KAAA,CAAA;AACA,KAHA;AAKA,IAAA,gBALA,8BAKA;AAEA,WAAA,QAAA,CAAA,MAAA,GAAA,EAAA;;AAEA,UAAA,CAAA,KAAA,QAAA,CAAA,KAAA,EAAA;AACA,aAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,iBAAA;AACA,OAFA,MAEA,IAAA,CAAA,KAAA,aAAA,CAAA,KAAA,QAAA,CAAA,KAAA,CAAA,EAAA;AACA,aAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,4CAAA,EADA,CAEA;AACA;AACA;;AAEA,UAAA,CAAA,KAAA,QAAA,CAAA,QAAA,EAAA,KAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,oBAAA;;AACA,UAAA,CAAA,KAAA,QAAA,CAAA,eAAA,EAAA;AACA,aAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,4BAAA;AACA,OAFA,MAEA,IAAA,KAAA,QAAA,CAAA,QAAA,IAAA,KAAA,QAAA,CAAA,eAAA,EAAA;AACA,aAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,sBAAA;AACA;;AACA,UAAA,CAAA,KAAA,QAAA,CAAA,SAAA,EAAA,KAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,sBAAA;AACA,UAAA,CAAA,KAAA,QAAA,CAAA,QAAA,EAAA,KAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,qBAAA;;AAEA,UAAA,EAAA,KAAA,QAAA,CAAA,MAAA,IAAA,KAAA,QAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AACA,eAAA,IAAA;AACA,OAFA,MAEA;AACA,eAAA,KAAA;AACA;AAEA,KAhCA;AAkCA,IAAA,eAlCA,6BAkCA;AAAA;;AAEA,UAAA,KAAA,GAAA,KAAA,gBAAA,EAAA;AAEA,UAAA,gBAAA,GAAA;AACA,QAAA,KAAA,EAAA,KAAA,QAAA,CAAA,KADA;AAEA,QAAA,QAAA,EAAA,KAAA,QAAA,CAAA,QAFA;AAGA,QAAA,SAAA,EAAA,KAAA,QAAA,CAAA,SAHA;AAIA,QAAA,QAAA,EAAA,KAAA,QAAA,CAAA,QAJA;AAKA,QAAA,UAAA,EAAA,aAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,CAAA,IAAA,CAAA,IAAA;AALA,OAAA;;AAQA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,IAAA,CAAA,eAAA,EAAA,gBAAA,EACA,IADA,CACA,UAAA,GAAA,EAAA;AACA,cAAA,GAAA,CAAA,IAAA,CAAA,IAAA,IAAA,IAAA,EAAA;AACA,YAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,UAAA;;AAEA,YAAA,KAAA,CAAA,cAAA,GAAA,IAAA;AACA,WAJA,MAIA;AACA,YAAA,KAAA,CAAA,QAAA,CAAA,MAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA;AACA;AACA,SATA;AAUA;AACA,KA1DA;AA4DA,IAAA,sBA5DA,oCA4DA;AACA,WAAA,QAAA,CAAA,MAAA,GAAA,KAAA;AAEA,WAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA;AADA,OAAA;AAIA;AAnEA;AAtBA,CAAA","sourcesContent":["<template>\n\t<div class=\"register\">\n\t\t<div class=\"registerErrors\" style=\"padding: 2em 2em 0em 2em; color: #ff0055\">\n\t\t\t<h4 v-for=\"(err, i) in register.errors\" :key=\"i\">\n\t\t\t\t{{ err }}\n\t\t\t</h4>\n\t\t\t<h4>{{register.status}}</h4>\n\t\t</div>\n\n\t\t<div style=\"padding: 0em 2em 2em 2em;\">\n\t\t\t<div>\n\t\t\t\t<input\n\t\t\t\t\tv-model=\"register.email\"\n\t\t\t\t\tplaceholder=\"E-mail\"\n\t\t\t\t\trequired\n\t\t\t\t>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input\n\t\t\t\t\tv-model=\"register.password\"\n\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\trequired\n\t\t\t\t>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input\n\t\t\t\t\tv-model=\"register.confirmPassword\"\n\t\t\t\t\tplaceholder=\"Confirm Password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\trequired\n\t\t\t\t>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input\n\t\t\t\t\tv-model=\"register.firstName\"\n\t\t\t\t\tplaceholder=\"First Name\"\n\t\t\t\t>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input\n\t\t\t\t\tv-model=\"register.lastName\"\n\t\t\t\t\tplaceholder=\"Last Name\"\n\t\t\t\t>\n\t\t\t</div>\n\t\t\t<button @click=\"registerHandler\">\n\t\t\tRegister\n\t\t\t</button>\n\t\t</div>\n\n\t\t<modal\n\t\t\tv-show=\"isModalVisible\"\n\t\t\t@close=\"successfullyRegistered()\"\n\t\t></modal>\n\n\t</div>\n</template>\n\n<script>\nimport axios from \"axios\"\nimport modal from \"@/components/auth/modal.vue\"\n\nexport default {\n\tname: 'Register',\n\tcomponents: {\n\t\tmodal,\n\t},\n  data() {\n    return {\n\t\t\tisModalVisible: false,\n      register: {\n        email: null,\n        password: null,\n        confirmPassword: null,\n        firstName: null,\n        lastName: null,\n        errors: [],\n        status: null\n      }\n    };\n  },\n  mounted() {\n    this.$store.commit('getEmails');\n  },\n  methods: {\n    validateEmail(email) {\n      return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n    },\n\n    registerValidate() {\n      \n      this.register.errors = []\n\n      if(!this.register.email) {\n        this.register.errors.push(\"Email required.\")\n      } else if(!this.validateEmail(this.register.email)) {\n        this.register.errors.push(\"Email must be in format example@domain.com\")\n      // }  else if(this.$store.state.userEmails.includes(this.register.email)) {\n      //   this.register.errors.push(\"Email is not allowed. Please choose another one.\")\n      }\n\n      if(!this.register.password) this.register.errors.push(\"Password required.\")\n      if(!this.register.confirmPassword) {\n        this.register.errors.push(\"Confirm Password required.\")\n      } else if(this.register.password != this.register.confirmPassword) {\n        this.register.errors.push(\"Passwords must match\")\n      }\n      if(!this.register.firstName) this.register.errors.push(\"First name required.\")\n      if(!this.register.lastName) this.register.errors.push(\"Last name required.\")\n\n      if(!(this.register.errors && this.register.errors.length)){\n        return true\n      } else{\n        return false\n      }\n      \n    },\n\n    registerHandler() {\n\n      let valid = this.registerValidate();\n\n      const registerUserData = {\n        email: this.register.email,\n        password: this.register.password,\n        firstName: this.register.firstName,\n\t\t\t\tlastName: this.register.lastName,\n\t\t\t\tprofilePic: \"default\" + (Math.floor(Math.random() * 2) + 1) + \".png\"\n      }\n\n      if(valid) {\n        axios.post(\"/api/register\", registerUserData)\n        .then(res => {\n          if (res.data.auth == true) {\n            this.$store.dispatch('authUser')\n\n            this.isModalVisible = true\n          } else {\n            this.register.status = res.data.error\n          }\n        })\n      }\n\t},\n\t\n\t\tsuccessfullyRegistered() {\n\t\t\tthis.register.dialog = false\n\n\t\t\tthis.$router.push({\n\t\t\t\tname: \"Start\"\n\t\t\t})\n\t\n\t\t}\n  }\n}\n</script>\n"],"sourceRoot":"src/components/auth"}]}