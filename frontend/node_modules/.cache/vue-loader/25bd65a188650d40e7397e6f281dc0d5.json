{"remainingRequest":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/danijel/Documents/Workspace/mc2/frontend/src/components/path/steps/Accordion.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/danijel/Documents/Workspace/mc2/frontend/src/components/path/steps/Accordion.vue","mtime":1558563567222},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport CustomStyles from \"@/components/path/steps/CustomStyles.vue\"\n\nexport default {\n    name: 'accordion',\n    props: ['label', 'width'],\n    components: {\n        CustomStyles\n    },\n    data() {\n\t\treturn {\n            styleID: \"\",\n            styleObjectKeys: {\n                '.toggle:checked + .lbl-toggle::before': 'transform: rotate(90deg) translateX(-3px);',\n            }\n        }\n    },\n    mounted(){\n        function makeid(length) {\n            var result           = '';\n            var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n            var charactersLength = characters.length;\n            for ( var i = 0; i < length; i++ ) {\n                result += characters.charAt(Math.floor(Math.random() * charactersLength));\n            }\n            return result;\n        }\n\n        this.styleID = makeid(5)\n\n        let myLabels = document.querySelectorAll('.lbl-toggle');\n\n        Array.from(myLabels).forEach(label => {\n            label.addEventListener('keydown', e => {\n                // 32 === spacebar\n                // 13 === enter\n                if (e.which === 32 || e.which === 13) {\n                e.preventDefault();\n                label.click();\n                }\n            })\n        })\n    },\n    methods: {\n        generateStyle() {\n\n        }\n    }\n}\n",{"version":3,"sources":["Accordion.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Accordion.vue","sourceRoot":"src/components/path/steps","sourcesContent":["<template>\n    <div>\n        <custom-styles>\n            .st {\n                fill: red;\n            }\n        </custom-styles>\n\n        <div class=\"wrap-collabsible\">\n            <input id=\"collapsible\" class=\"toggle\" type=\"checkbox\">\n            <label for=\"collapsible\" class=\"lbl-toggle\" :style=\"{'width': width}\">{{label}}</label>\n            <div class=\"collapsible-content\">\n                <div class=\"content-inner\">\n                    <slot></slot>\n                </div>\n            </div>\n        </div>\n\t</div>   \n</template>\n\n<script>\nimport CustomStyles from \"@/components/path/steps/CustomStyles.vue\"\n\nexport default {\n    name: 'accordion',\n    props: ['label', 'width'],\n    components: {\n        CustomStyles\n    },\n    data() {\n\t\treturn {\n            styleID: \"\",\n            styleObjectKeys: {\n                '.toggle:checked + .lbl-toggle::before': 'transform: rotate(90deg) translateX(-3px);',\n            }\n        }\n    },\n    mounted(){\n        function makeid(length) {\n            var result           = '';\n            var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n            var charactersLength = characters.length;\n            for ( var i = 0; i < length; i++ ) {\n                result += characters.charAt(Math.floor(Math.random() * charactersLength));\n            }\n            return result;\n        }\n\n        this.styleID = makeid(5)\n\n        let myLabels = document.querySelectorAll('.lbl-toggle');\n\n        Array.from(myLabels).forEach(label => {\n            label.addEventListener('keydown', e => {\n                // 32 === spacebar\n                // 13 === enter\n                if (e.which === 32 || e.which === 13) {\n                e.preventDefault();\n                label.click();\n                }\n            })\n        })\n    },\n    methods: {\n        generateStyle() {\n\n        }\n    }\n}\n</script>\n\n<style scoped>\n.wrap-collabsible {\n  margin-bottom: 1.2rem 0;\n}\n\ninput[type='checkbox'] {\n  display: none;\n}\n\n.lbl-toggle {\n  display: inline-block;\n\n  font-weight: bold;\n  font-family: monospace;\n  font-size: 1.2rem;\n  text-transform: uppercase;\n  text-align: center;\n\n  padding: 1rem;\n\n  color: #fff;\n  background: #0a2155;\n\n  cursor: pointer;\n\n  border-radius: 7px;\n  transition: all 0.25s ease-out;\n}\n\n.lbl-toggle:hover {\n  color: #f54925;\n}\n\n.lbl-toggle::before {\n  content: ' ';\n  display: inline-block;\n\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n  border-left: 5px solid currentColor;\n  vertical-align: middle;\n  margin-right: .7rem;\n  transform: translateY(-2px);\n\n  transition: transform .2s ease-out;\n}\n\n.toggle:checked + .lbl-toggle::before {\n  transform: rotate(90deg) translateX(-3px);\n}\n\n.collapsible-content {\n  max-height: 0px;\n  overflow: hidden;\n  transition: max-height .25s ease-in-out;\n}\n\n.toggle:checked + .lbl-toggle + .collapsible-content {\n  max-height: 350px;\n}\n\n.toggle:checked + .lbl-toggle {\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n.collapsible-content .content-inner {\n  background: #0a2155;\n  border-bottom-left-radius: 7px;\n  border-bottom-right-radius: 7px;\n  padding: .5rem 1rem;\n}   \n</style>\n"]}]}