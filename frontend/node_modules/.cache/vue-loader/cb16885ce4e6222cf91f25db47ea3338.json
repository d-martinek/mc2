{"remainingRequest":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/danijel/Documents/Workspace/mc2/frontend/src/components/auth/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/danijel/Documents/Workspace/mc2/frontend/src/components/auth/Register.vue","mtime":1559852495208},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1557082350867},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/babel-loader/lib/index.js","mtime":1557082335768},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1557082350867},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/vue-loader/lib/index.js","mtime":1557082351628}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from \"axios\"\nimport modal from \"@/components/auth/modal.vue\"\n\nexport default {\n\tname: 'Register',\n\tcomponents: {\n\t\tmodal,\n\t},\n  data() {\n    return {\n\t\t\tisModalVisible: false,\n      register: {\n        email: null,\n        password: null,\n        confirmPassword: null,\n        firstName: null,\n        lastName: null,\n        errors: [],\n        status: null\n      }\n    };\n  },\n  methods: {\n    validateEmail(email) {\n      return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n    },\n\n    registerValidate() {\n      \n      this.register.errors = []\n\n      if(!this.register.email) {\n        this.register.errors.push(\"Email required.\")\n      } else if(!this.validateEmail(this.register.email)) {\n        this.register.errors.push(\"Email must be in format example@domain.com\")\n      }\n\n      if(!this.register.password) this.register.errors.push(\"Password required.\")\n      if(!this.register.confirmPassword) {\n        this.register.errors.push(\"Confirm Password required.\")\n      } else if(this.register.password != this.register.confirmPassword) {\n        this.register.errors.push(\"Passwords must match\")\n      }\n      if(!this.register.firstName) this.register.errors.push(\"First name required.\")\n      if(!this.register.lastName) this.register.errors.push(\"Last name required.\")\n\n      if(!(this.register.errors && this.register.errors.length)){\n        return true\n      } else{\n        return false\n      }\n      \n    },\n\n    registerHandler() {\n\n      let valid = this.registerValidate();\n\n      const registerUserData = {\n        email: this.register.email,\n        password: this.register.password,\n        firstName: this.register.firstName,\n\t\t\t\tlastName: this.register.lastName,\n\t\t\t\tprofilePic: \"default\" + (Math.floor(Math.random() * 2) + 1) + \".png\"\n      }\n\n      if(valid) {\n        axios.post(\"/api/register\", registerUserData)\n        .then(res => {\n          if (res.data.auth == true) {\n            this.$store.dispatch('authUser')\n\n            this.isModalVisible = true\n          } else {\n            this.register.status = res.data.error\n          }\n        })\n      }\n\t\t},\n\t\n\t\tsuccessfullyRegistered() {\n\t\t\tthis.isModalVisible = false\n\n\t\t\tthis.$router.push({\n\t\t\t\tname: \"Start\"\n\t\t\t})\n\t\n\t\t}\n  }\n}\n",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Register.vue","sourceRoot":"src/components/auth","sourcesContent":["<template>\n\t<div class=\"register\">\n\t\t<div class=\"registerErrors\" style=\"padding: 1em 1em 0em 1em; color: #ff0055\">\n\t\t\t<h4 v-for=\"(err, i) in register.errors\" :key=\"i\">\n\t\t\t\t{{ err }}\n\t\t\t</h4>\n\t\t\t<h4>{{register.status}}</h4>\n\t\t</div>\n\n\t\t<div style=\"padding: 0em 2em 2em 2em;\">\n\t\t\t<div>\n\t\t\t\t<input\n\t\t\t\t\tv-model=\"register.email\"\n\t\t\t\t\tplaceholder=\"E-mail\"\n\t\t\t\t\trequired\n\t\t\t\t>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input\n\t\t\t\t\tv-model=\"register.password\"\n\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\trequired\n\t\t\t\t>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input\n\t\t\t\t\tv-model=\"register.confirmPassword\"\n\t\t\t\t\tplaceholder=\"Confirm Password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\trequired\n\t\t\t\t>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input\n\t\t\t\t\tv-model=\"register.firstName\"\n\t\t\t\t\tplaceholder=\"First Name\"\n\t\t\t\t>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input\n\t\t\t\t\tv-model=\"register.lastName\"\n\t\t\t\t\tplaceholder=\"Last Name\"\n\t\t\t\t>\n\t\t\t</div>\n\t\t\t<button @click=\"registerHandler\">\n\t\t\tRegister\n\t\t\t</button>\n\t\t</div>\n\n\t\t<modal\n\t\t\tv-show=\"isModalVisible\"\n\t\t\t@close=\"successfullyRegistered()\"\n\t\t></modal>\n\n\t</div>\n</template>\n\n<script>\nimport axios from \"axios\"\nimport modal from \"@/components/auth/modal.vue\"\n\nexport default {\n\tname: 'Register',\n\tcomponents: {\n\t\tmodal,\n\t},\n  data() {\n    return {\n\t\t\tisModalVisible: false,\n      register: {\n        email: null,\n        password: null,\n        confirmPassword: null,\n        firstName: null,\n        lastName: null,\n        errors: [],\n        status: null\n      }\n    };\n  },\n  methods: {\n    validateEmail(email) {\n      return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n    },\n\n    registerValidate() {\n      \n      this.register.errors = []\n\n      if(!this.register.email) {\n        this.register.errors.push(\"Email required.\")\n      } else if(!this.validateEmail(this.register.email)) {\n        this.register.errors.push(\"Email must be in format example@domain.com\")\n      }\n\n      if(!this.register.password) this.register.errors.push(\"Password required.\")\n      if(!this.register.confirmPassword) {\n        this.register.errors.push(\"Confirm Password required.\")\n      } else if(this.register.password != this.register.confirmPassword) {\n        this.register.errors.push(\"Passwords must match\")\n      }\n      if(!this.register.firstName) this.register.errors.push(\"First name required.\")\n      if(!this.register.lastName) this.register.errors.push(\"Last name required.\")\n\n      if(!(this.register.errors && this.register.errors.length)){\n        return true\n      } else{\n        return false\n      }\n      \n    },\n\n    registerHandler() {\n\n      let valid = this.registerValidate();\n\n      const registerUserData = {\n        email: this.register.email,\n        password: this.register.password,\n        firstName: this.register.firstName,\n\t\t\t\tlastName: this.register.lastName,\n\t\t\t\tprofilePic: \"default\" + (Math.floor(Math.random() * 2) + 1) + \".png\"\n      }\n\n      if(valid) {\n        axios.post(\"/api/register\", registerUserData)\n        .then(res => {\n          if (res.data.auth == true) {\n            this.$store.dispatch('authUser')\n\n            this.isModalVisible = true\n          } else {\n            this.register.status = res.data.error\n          }\n        })\n      }\n\t\t},\n\t\n\t\tsuccessfullyRegistered() {\n\t\t\tthis.isModalVisible = false\n\n\t\t\tthis.$router.push({\n\t\t\t\tname: \"Start\"\n\t\t\t})\n\t\n\t\t}\n  }\n}\n</script>\n"]}]}