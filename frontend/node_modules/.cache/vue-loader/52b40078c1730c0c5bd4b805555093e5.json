{"remainingRequest":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/danijel/Documents/Workspace/mc2/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/danijel/Documents/Workspace/mc2/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/danijel/Documents/Workspace/mc2/frontend/src/components/auth/Register.vue?vue&type=template&id=4523026a&","dependencies":[{"path":"/home/danijel/Documents/Workspace/mc2/frontend/src/components/auth/Register.vue","mtime":1559852122560},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1557082350867},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1557082351628},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1557082350867},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/vue-loader/lib/index.js","mtime":1557082351628}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"register\" },\n    [\n      _c(\n        \"div\",\n        {\n          staticClass: \"registerErrors\",\n          staticStyle: { padding: \"1em 1em 0em 1em\", color: \"#ff0055\" }\n        },\n        [\n          _vm._l(_vm.register.errors, function(err, i) {\n            return _c(\"h4\", { key: i }, [\n              _vm._v(\"\\n\\t\\t\\t\" + _vm._s(err) + \"\\n\\t\\t\")\n            ])\n          }),\n          _c(\"h4\", [_vm._v(_vm._s(_vm.register.status))])\n        ],\n        2\n      ),\n      _c(\"div\", { staticStyle: { padding: \"0em 2em 2em 2em\" } }, [\n        _c(\"div\", [\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.register.email,\n                expression: \"register.email\"\n              }\n            ],\n            attrs: { placeholder: \"E-mail\", required: \"\" },\n            domProps: { value: _vm.register.email },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.$set(_vm.register, \"email\", $event.target.value)\n              }\n            }\n          })\n        ]),\n        _c(\"div\", [\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.register.password,\n                expression: \"register.password\"\n              }\n            ],\n            attrs: { placeholder: \"Password\", type: \"password\", required: \"\" },\n            domProps: { value: _vm.register.password },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.$set(_vm.register, \"password\", $event.target.value)\n              }\n            }\n          })\n        ]),\n        _c(\"div\", [\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.register.confirmPassword,\n                expression: \"register.confirmPassword\"\n              }\n            ],\n            attrs: {\n              placeholder: \"Confirm Password\",\n              type: \"password\",\n              required: \"\"\n            },\n            domProps: { value: _vm.register.confirmPassword },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.$set(_vm.register, \"confirmPassword\", $event.target.value)\n              }\n            }\n          })\n        ]),\n        _c(\"div\", [\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.register.firstName,\n                expression: \"register.firstName\"\n              }\n            ],\n            attrs: { placeholder: \"First Name\" },\n            domProps: { value: _vm.register.firstName },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.$set(_vm.register, \"firstName\", $event.target.value)\n              }\n            }\n          })\n        ]),\n        _c(\"div\", [\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.register.lastName,\n                expression: \"register.lastName\"\n              }\n            ],\n            attrs: { placeholder: \"Last Name\" },\n            domProps: { value: _vm.register.lastName },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.$set(_vm.register, \"lastName\", $event.target.value)\n              }\n            }\n          })\n        ]),\n        _c(\"button\", { on: { click: _vm.registerHandler } }, [\n          _vm._v(\"\\n\\t\\tRegister\\n\\t\\t\")\n        ])\n      ]),\n      _c(\"modal\", {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.isModalVisible,\n            expression: \"isModalVisible\"\n          }\n        ],\n        on: {\n          close: function($event) {\n            return _vm.successfullyRegistered()\n          }\n        }\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}