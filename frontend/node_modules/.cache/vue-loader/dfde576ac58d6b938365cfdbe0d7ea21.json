{"remainingRequest":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/danijel/Documents/Workspace/mc2/frontend/src/components/path/StepSelector.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/danijel/Documents/Workspace/mc2/frontend/src/components/path/StepSelector.vue","mtime":1558475454960},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1555505910712},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/babel-loader/lib/index.js","mtime":1555505902219},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1555505910712},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/vue-loader/lib/index.js","mtime":1555505911257}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'toggleStep',\n  props: ['path'],\n\tdata() {\n\t\treturn {\n\t\t\tstep: 0\n\t\t}\n  },\n  mounted(){\n    this.$emit('stepClicked', 0)\n    console.log(this.path)\n  },\n\tmethods: {\n\t\tchangeStepTo: function(s) {\n      if(this.step != s){\n        this.step = s\n        this.$emit('stepClicked', s)\n      }\n    }\n\t}\n}\n",{"version":3,"sources":["StepSelector.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StepSelector.vue","sourceRoot":"src/components/path","sourcesContent":["<template>\n    <div>\n       <div id=\"toggleCategoryContainer\">\n          <div id=\"toggleCategory\">\n              <label class=\"select\">\n                  <input type=\"radio\" checked=\"checked\" @click=\"changeStepTo(0)\" name=\"radio\">\n                  <span class=\"checkmark\"></span>\n                  <div class=\"text\">{{ path }}</div>\n              </label>\n              <div class=\"line\"></div>\n              <label class=\"select\">\n                  <input type=\"radio\" @click=\"changeStepTo(1)\" name=\"radio\">\n                  <span class=\"checkmark\"></span>\n                  <div class=\"text\">{{ path }}</div>\n              </label>\n              <div class=\"line\"></div>\n              <label class=\"select\">\n                  <input type=\"radio\" @click=\"changeStepTo(2)\" name=\"radio\">\n                  <span class=\"checkmark\"></span>\n                  <div class=\"text\">{{ path }}</div>\n              </label>\n          </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: 'toggleStep',\n  props: ['path'],\n\tdata() {\n\t\treturn {\n\t\t\tstep: 0\n\t\t}\n  },\n  mounted(){\n    this.$emit('stepClicked', 0)\n    console.log(this.path)\n  },\n\tmethods: {\n\t\tchangeStepTo: function(s) {\n      if(this.step != s){\n        this.step = s\n        this.$emit('stepClicked', s)\n      }\n    }\n\t}\n}\n</script>\n\n<style>\n#selectedPath{\n    width: 100%;\n    height: 100%;\n}\n\n@media only screen and (min-width: 1070px) {\n\n    #selectedPath{\n        position: fixed;\n        width: 80%;\n        margin-left: 20%;\n    }\n}\n\n\n#toggleCategoryContainer{\n  position: fixed;\n  height: 20%;\n  width: 80%;\n  right: 0;\n  padding-top: 2em;\n  \n  background-color: #0a2763;\n}\n\n#toggleCategory{\n  width: 80%;\n  position: relative;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  padding: 1em;\n}\n\n#toggleCategory:checked{\n  right: 0%;\n}\n\n\n.select {\n  width: 16%;\n  float: left;\n  position: relative;\n  margin: 0.5em 0.15em 1.5em 0.15em;\n  cursor: pointer;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n.text {\n  position: static;\n  padding-top: 1em;\n  font-size: 1em;\n  font-weight: bold;\n  font-family: Roboto;\n  color: white;\n  text-transform: uppercase;\n  text-align: center;\n}\n\n/* Hide the browser's default radio button */\n.select input {\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n}\n\n/* Create a custom radio button */\n.checkmark {\n  position: static;\n  display: block;\n  margin: 0 auto;\n  height: 20px;\n  width: 20px;\n  background-color: #fff;\n  border-radius: 50%;\n}\n\n/* On mouse-over, add a grey background color */\n.select:hover input ~ .checkmark {\n  background-color: #ffc9c2;\n}\n\n/* When the radio button is checked, add a blue background */\n.select input:checked ~ .checkmark {\n  background-color: #f53b24;\n  box-shadow: 1px 1px 7px #f53b24;\n}\n\n.line{\n  width: 24%;\n  height: 5px;\n  float: left;\n  margin: 1em 0em 0em 0em;\n  background-color: #fff;\n  border-radius: 25px;\n}\n</style>\n"]}]}