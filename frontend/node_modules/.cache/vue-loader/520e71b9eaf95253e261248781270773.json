{"remainingRequest":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/danijel/Documents/Workspace/mc2/frontend/src/components/auth/Login.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/danijel/Documents/Workspace/mc2/frontend/src/components/auth/Login.vue","mtime":1560128588894},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/css-loader/index.js","mtime":1557082350999},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1557082351628},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/postcss-loader/src/index.js","mtime":1557082351445},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1557082350867},{"path":"/home/danijel/Documents/Workspace/mc2/frontend/node_modules/vue-loader/lib/index.js","mtime":1557082351628}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import './resetInputsStyle.css';\n\n.dform {\n  font-family: 'PublicSans';\n  font-size: 1.2em;\n  caret-color: #FF5E3A;\n  width: 30%;\n  height: 2.5em;\n  color: #F2F2F0;\n  padding-left: 1em;\n  margin: 0.5em;\n  background-color: #2C365D;\n  border-radius: 0.5em !important;\n\tbox-shadow: 0px 0px 10px 5px rgba(0, 0, 0, 0.2);\n}\n.dform::placeholder {\n  color: #F2F2F0;\n  padding-left: 1em;\n  font-size: 1em;\n}\n\n.dform:focus::placeholder {\n  position: relative;\n  color: #FF5E3A;\n  top: -0.8em;\n  font-size: 0.8em;\n  padding-left: 0em;\n  transition: 0.2s ease;\n}\n\n.dform:target {\n  padding-left: 4em;\n}\n\n.loginErrors{\n  color: #FF5E3A;\n  padding: 1em 0em 0em 3em;\n  border: 1px solir red;\n}\n\n/**\n * Reset button styles.\n * It takes a bit of work to achieve a neutral look.\n */\nbutton {\n  padding: 0;\n  border: none;\n  font: inherit;\n  color: inherit;\n  background-color: transparent;\n  /* show a hand cursor on hover; some argue that we\n  should keep the default arrow cursor for buttons */\n  cursor: pointer;\n}\n\n.confirm-btn {\n\tfloat: left;\n\twidth: auto !important;\n\tcolor: #F2F2F0;\n\tfont-weight: bold;\n\ttext-transform: uppercase;\n\tcursor: pointer;\n\tbackground-color: #FF5E3A;\n  padding: 1em;\n  margin: 0.6em;\n\tborder-radius: 0.5em;\n\tbox-shadow: 0px 0px 10px 5px rgba(0, 0, 0, 0.2);\n}\n\n.confirm-btn:hover {\n\tbackground-color: #fd7d61;\n}\n\n.confirm-btn-disabled {\n\tfloat: left;\n\twidth: auto !important;\n\tcolor: rgb(242, 242, 240, 0.5);\n\tfont-weight: bold;\n\ttext-transform: uppercase;\n\tcursor: pointer;\n\tbackground-color: #bebebe;\n\tpadding: 1em;\n\tborder-radius: 0.5em;\n\tbox-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0);\n}\n\n\n.confirm-btn:active {\n\tfont-size: 0.9em;\n\tbox-shadow: 0px 0px 10px 2px rgba(0, 0, 0, 0.1);\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components/auth","sourcesContent":["<template>\n\t<div class=\"login\">\n\t\t<div class=\"loginErrors\">\n\t\t\t<h4 v-for=\"(err, i) in login.errors\" :key=\"i\">\n\t\t\t\t{{ err }}\n\t\t\t</h4>\n\t\t\t<h4>{{login.status}}</h4>\n\t\t</div>\n\n\t\t<div style=\"padding: 0em 2em 2em 2em;\">\n\t\t\t<div>\n\t\t\t\t<input\n\t\t\t\t\tv-model=\"login.email\"\n          class=\"dform\"\n\t\t\t\t\tplaceholder=\"E-mail\"\n\t\t\t\t\trequired\n\t\t\t\t>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input\n\t\t\t\t\tv-model=\"login.password\"\n          class=\"dform\"\n\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\trequired\n\t\t\t\t>\n\t\t\t</div>\n\t\t\t<div class=\"confirm-btn\" @click=\"loginHandler()\">Potvrdi</div>\n      <br><br><br>\n      <div><button @click=\"logout()\">\n\t\t\tLogout\n\t\t\t</button></div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport axios from \"axios\"\n\nexport default {\n  name: 'login',\n  data() {\n    return {\n      login: {\n        email: null,\n        password: null,\n        errors: [],\n        status: null\n      }\n    }\n  },\n  methods:{\n\n    validateEmail(email) {\n      return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n    },\n\n    loginValidate() {\n      \n      this.login.errors = []\n\n      if(!this.login.email) {\n        this.login.errors.push(\"Email required.\")\n      } else if(!this.validateEmail(this.login.email)) {\n        this.login.errors.push(\"Email must be in format example@domain.com\")\n      }\n      if(!this.login.password) this.login.errors.push(\"Password required.\")\n\n      if(!(this.login.errors && this.login.errors.length)){\n        return true\n      } else{\n        return false\n      }\n      \n    },\n    loginHandler() {\n      let valid = this.loginValidate()\n\n      const loginUserData = {\n        email: this.login.email,\n        password: this.login.password,\n      }\n\n      if(valid) {\n        axios.post(\"/api/login\", loginUserData)\n        .then(res => {\n          if (res.data.auth == true) {\n            this.$store.dispatch('authUser')\n            this.$router.push({\n              name: \"Start\"\n            })\n          } else {\n            this.login.status = res.data.error\n          }\n        })\n      }\n    },\n\n    logout(){\n      this.$store.commit('logoutUser')\n    }\n  }\n}\n</script>\n\n<style>\n@import './resetInputsStyle.css';\n\n.dform {\n  font-family: 'PublicSans';\n  font-size: 1.2em;\n  caret-color: #FF5E3A;\n  width: 30%;\n  height: 2.5em;\n  color: #F2F2F0;\n  padding-left: 1em;\n  margin: 0.5em;\n  background-color: #2C365D;\n  border-radius: 0.5em !important;\n\tbox-shadow: 0px 0px 10px 5px rgba(0, 0, 0, 0.2);\n}\n.dform::placeholder {\n  color: #F2F2F0;\n  padding-left: 1em;\n  font-size: 1em;\n}\n\n.dform:focus::placeholder {\n  position: relative;\n  color: #FF5E3A;\n  top: -0.8em;\n  font-size: 0.8em;\n  padding-left: 0em;\n  transition: 0.2s ease;\n}\n\n.dform:target {\n  padding-left: 4em;\n}\n\n.loginErrors{\n  color: #FF5E3A;\n  padding: 1em 0em 0em 3em;\n  border: 1px solir red;\n}\n\n/**\n * Reset button styles.\n * It takes a bit of work to achieve a neutral look.\n */\nbutton {\n  padding: 0;\n  border: none;\n  font: inherit;\n  color: inherit;\n  background-color: transparent;\n  /* show a hand cursor on hover; some argue that we\n  should keep the default arrow cursor for buttons */\n  cursor: pointer;\n}\n\n.confirm-btn {\n\tfloat: left;\n\twidth: auto !important;\n\tcolor: #F2F2F0;\n\tfont-weight: bold;\n\ttext-transform: uppercase;\n\tcursor: pointer;\n\tbackground-color: #FF5E3A;\n  padding: 1em;\n  margin: 0.6em;\n\tborder-radius: 0.5em;\n\tbox-shadow: 0px 0px 10px 5px rgba(0, 0, 0, 0.2);\n}\n\n.confirm-btn:hover {\n\tbackground-color: #fd7d61;\n}\n\n.confirm-btn-disabled {\n\tfloat: left;\n\twidth: auto !important;\n\tcolor: rgb(242, 242, 240, 0.5);\n\tfont-weight: bold;\n\ttext-transform: uppercase;\n\tcursor: pointer;\n\tbackground-color: #bebebe;\n\tpadding: 1em;\n\tborder-radius: 0.5em;\n\tbox-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0);\n}\n\n\n.confirm-btn:active {\n\tfont-size: 0.9em;\n\tbox-shadow: 0px 0px 10px 2px rgba(0, 0, 0, 0.1);\n}\n</style>\n\n"]}]}